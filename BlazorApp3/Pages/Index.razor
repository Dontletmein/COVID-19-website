@page "/"

@using BlazorApp3.Data
@inject NZC19CaseStatsService CaseStatsService


@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.ChartJS.PolarAreaChart
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.Util

<h1>Polar Area Chart</h1>

<ChartJsPolarAreaChart @ref="_polarChartJs" Config="@_config" Width="600" Height="300" />



@code {
    private PolarAreaConfig _config;
    private ChartJsPolarAreaChart _polarChartJs;

    private string caseStatsUrl = "https://nzcovid19api.xerra.nz/casestats/json";

    protected override async void OnInitialized()
    {
        _config = new PolarAreaConfig
        {
            Options = new PolarAreaOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Sample chart from Blazor"
                },
                Responsive = true,
                Animation = new ArcAnimation
                {
                    AnimateRotate = true,
                    AnimateScale = true
                }
            }
        };

        NZC19CaseStatsData[] cseStatsData;

        cseStatsData = await CaseStatsService.GetCaseStatsAsync(DateTime.Now, caseStatsUrl);

        _config.Data.Labels.AddRange(new[] { "A", "B", "C", "D" });

        var polarAreaSet = new PolarAreaDataset
        {
            BackgroundColor = new[] { ColorUtil.RandomColorString(), ColorUtil.RandomColorString(), ColorUtil.RandomColorString(), ColorUtil.RandomColorString() },
            BorderWidth = 2,
            HoverBackgroundColor = ColorUtil.RandomColorString(),
            HoverBorderColor = ColorUtil.RandomColorString(),
            HoverBorderWidth = 2,
            BorderColor = "#ffffff",
        };

        polarAreaSet.Data.AddRange(new double[] { 4, 5, 6, 7 });
        _config.Data.Datasets.Add(polarAreaSet);
    }

}


